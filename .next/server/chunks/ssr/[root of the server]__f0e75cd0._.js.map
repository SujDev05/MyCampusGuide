{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/course-suggestion.ts"],"sourcesContent":["// This file uses server-side code.\n'use server';\n\n/**\n * @fileOverview AI agent that suggests suitable university courses based on student's academic inputs and preferences.\n *\n * - suggestCourses - A function that handles the course suggestion process.\n * - CourseSuggestionInput - The input type for the suggestCourses function.\n * - CourseSuggestionOutput - The return type for the suggestCourses function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst CourseSuggestionInputSchema = z.object({\n  tenthBoardMarks: z\n    .number()\n    .describe('Marks obtained in 10th board exams (out of 100).'),\n  twelfthBoardMarks: z\n    .number()\n    .describe('Marks obtained in 12th board exams (out of 100).'),\n  preferredStream: z\n    .string()\n    .describe(\n      'The preferred academic stream of the student (e.g., Science, Commerce, Arts).'\n    ),\n  interests: z\n    .string()\n    .describe('The interests of the student (e.g., coding, literature, sports).'),\n  careerAspirations: z\n    .string()\n    .describe('The career aspirations of the student (e.g., engineering, medicine, business).'),\n});\n\nexport type CourseSuggestionInput = z.infer<typeof CourseSuggestionInputSchema>;\n\nconst CourseSuggestionOutputSchema = z.object({\n  suggestedCourses: z.array(\n    z.object({\n      courseName: z.string().describe('The name of the suggested course.'),\n      university: z.string().describe('The university offering the course.'),\n      personalizedRating: z\n        .number()\n        .describe(\n          'A personalized rating (out of 5) indicating the suitability of the course for the student.'\n        ),\n      reason: z\n        .string()\n        .describe('The reason why this course is suitable for the student based on their inputs.')\n    })\n  ).describe('List of suitable university courses with personalized ratings.'),\n});\n\nexport type CourseSuggestionOutput = z.infer<typeof CourseSuggestionOutputSchema>;\n\nexport async function suggestCourses(input: CourseSuggestionInput): Promise<CourseSuggestionOutput> {\n  return suggestCoursesFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'courseSuggestionPrompt',\n  input: {schema: CourseSuggestionInputSchema},\n  output: {schema: CourseSuggestionOutputSchema},\n  prompt: `You are an expert academic advisor specializing in suggesting university courses to students.\n\nYou will use the student's academic information and preferences to suggest suitable courses based on their personalized ratings (out of 5).\n\nConsider the weights on the input like board marks, interests, stream and career aspirations.\n\nHere is the student's information:\n\nTenth Board Marks: {{{tenthBoardMarks}}}\nTwelfth Board Marks: {{{twelfthBoardMarks}}}\nPreferred Stream: {{{preferredStream}}}\nInterests: {{{interests}}}\nCareer Aspirations: {{{careerAspirations}}}\n\nSuggest university courses with personalized ratings and reasons:\n\nOutput in JSON format.`, // Specify JSON format\n});\n\nconst suggestCoursesFlow = ai.defineFlow(\n  {\n    name: 'suggestCoursesFlow',\n    inputSchema: CourseSuggestionInputSchema,\n    outputSchema: CourseSuggestionOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;;AAGnC;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACZ,mBAAmB,uIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;IACZ,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CACP;IAEJ,WAAW,uIAAA,CAAA,IAAC,CACT,MAAM,GACN,QAAQ,CAAC;IACZ,mBAAmB,uIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;AACd;AAIA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,kBAAkB,uIAAA,CAAA,IAAC,CAAC,KAAK,CACvB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAChC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAChC,oBAAoB,uIAAA,CAAA,IAAC,CAClB,MAAM,GACN,QAAQ,CACP;QAEJ,QAAQ,uIAAA,CAAA,IAAC,CACN,MAAM,GACN,QAAQ,CAAC;IACd,IACA,QAAQ,CAAC;AACb;AAIO,eAAe,uCAAY,GAAZ,eAAe,KAA4B;IAC/D,OAAO,mBAAmB;AAC5B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;;;;;;;;;;;;;sBAgBW,CAAC;AACvB;AAEA,MAAM,qBAAqB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IApCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/course-suggester/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { suggestCourses, type CourseSuggestionInput, type CourseSuggestionOutput } from \"@/ai/flows/course-suggestion\";\n\nexport async function getCourseSuggestions(\n  input: CourseSuggestionInput\n): Promise<CourseSuggestionOutput | { error: string }> {\n  try {\n    // Basic validation can be done here if needed, though Zod on client is primary for UX\n    if (input.tenthBoardMarks < 0 || input.tenthBoardMarks > 100 ||\n        input.twelfthBoardMarks < 0 || input.twelfthBoardMarks > 100) {\n      return { error: \"Board marks must be between 0 and 100.\" };\n    }\n    if (!input.preferredStream || input.interests.length < 5 || input.careerAspirations.length < 5) {\n        return {error: \"Please fill all fields with sufficient details.\"};\n    }\n\n\n    const result = await suggestCourses(input);\n    return result;\n  } catch (e) {\n    console.error(\"Error in getCourseSuggestions action:\", e);\n    const errorMessage = e instanceof Error ? e.message : \"An unexpected error occurred.\";\n    return { error: `Failed to get course suggestions: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAkB,GAAlB,qBACpB,KAA4B;IAE5B,IAAI;QACF,sFAAsF;QACtF,IAAI,MAAM,eAAe,GAAG,KAAK,MAAM,eAAe,GAAG,OACrD,MAAM,iBAAiB,GAAG,KAAK,MAAM,iBAAiB,GAAG,KAAK;YAChE,OAAO;gBAAE,OAAO;YAAyC;QAC3D;QACA,IAAI,CAAC,MAAM,eAAe,IAAI,MAAM,SAAS,CAAC,MAAM,GAAG,KAAK,MAAM,iBAAiB,CAAC,MAAM,GAAG,GAAG;YAC5F,OAAO;gBAAC,OAAO;YAAiD;QACpE;QAGA,MAAM,SAAS,MAAM,CAAA,GAAA,0IAAA,CAAA,iBAAc,AAAD,EAAE;QACpC,OAAO;IACT,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,yCAAyC;QACvD,MAAM,eAAe,aAAa,QAAQ,EAAE,OAAO,GAAG;QACtD,OAAO;YAAE,OAAO,CAAC,kCAAkC,EAAE,cAAc;QAAC;IACtE;AACF;;;IArBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/course-suggester/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/course-suggester/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/course-suggester/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/course-suggester/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/course-suggester/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/course-suggester/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiR,GAC9S,+CACA","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}